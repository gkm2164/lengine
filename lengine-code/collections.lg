(module collections)

(export len     (native lengine.Prelude.LEN fn))
(export take    (native lengine.Prelude.TAKE fn))
(export drop    (native lengine.Prelude.DROP fn))
(export head    (native lengine.Prelude.HEAD fn))
(export tail    (native lengine.Prelude.TAIL fn))
(export fold    (native lengine.Prelude.FOLD fn))
(export +:      (native lengine.Prelude.APPEND_ITEM fn))
(export ++      (native lengine.Prelude.MERGE fn))
(export >+      (native lengine.Prelude.ADD_FRONT fn))
(export +<      (native lengine.Prelude.ADD_REAR fn))

(export list    (native lengine.Prelude.CAST_LIST fn))
(export list?   (native lengine.Prelude.IS_LIST fn))
(export seq     (native lengine.Prelude.CAST_SEQ fn))
(export seq?    (native lengine.Prelude.IS_SEQ fn))
(export cons?   (native lengine.Prelude.IS_CONS fn))
(export nil     (native lengine.Prelude.NIL var))
(export nil?    (native lengine.Prelude.IS_NIL fn))
(export nil>    (native lengine.Prelude.GET_NIL fn))
(export set     (native lengine.Prelude.CAST_SET fn))
(export set?    (native lengine.Prelude.IS_SET fn))
(export has?    (native lengine.Prelude.DOES_HAVE fn))
(export range   (native lengine.Prelude.RANGE fn))
(export =range  (native lengine.Prelude.INCLUSIVE_RANGE fn))

(export object? (native lengine.Prelude.IS_OBJECT fn))
(export key     (native lengine.Prelude.KEY fn))
(export entry   (native lengine.Prelude.ENTRY fn))
(export keys    (native lengine.Prelude.KEYS fn))
(export entries (native lengine.Prelude.ENTRIES fn))
(export get     (native lengine.Prelude.OBJECT_GET fn))

(export 'cons        (native lengine.Prelude.STREAM_CONS fn))
(export 'cons?       (native lengine.Prelude.IS_STREAM_CONS fn))
(export 'unresolved? (native lengine.Prelude.IS_STREAM_UNRESOLVED fn))
(export stream       (native lengine.Prelude.CAST_STREAM fn))
(export stream?      (native lengine.Prelude.IS_STREAM fn))

(export 'nil  (native lengine.Prelude.STREAM_NIL var))
(export 'nil? (native lengine.Prelude.IS_STREAM_NIL fn))

(export read-char (native lengine.Prelude.READ_CHAR fn))
(export read-file (native lengine.Prelude.READ_FILE fn))
