(module prelude)

(export + (native lengine.Prelude.ADD fn))
(export - (native lengine.Prelude.SUB fn))
(export * (native lengine.Prelude.MULT fn))
(export / (native lengine.Prelude.DIV fn))

(export & (native lengine.Prelude.BYTE_AND fn))
(export | (native lengine.Prelude.BYTE_OR fn))
(export ~ (native lengine.Prelude.BYTE_NEG fn))

(export and  (native lengine.Prelude.AND fn))
(export or   (native lengine.Prelude.OR fn))
(export not  (native lengine.Prelude.NOT fn))
(export <    (native lengine.Prelude.LESS_THAN fn))
(export <=   (native lengine.Prelude.LESS_EQUALS fn))
(export >    (native lengine.Prelude.GREATER_THAN fn))
(export >=   (native lengine.Prelude.GREATER_EQUALS fn))
(export =    (native lengine.Prelude.EQUALS fn))
(export /=   (native lengine.Prelude.NOT_EQUALS fn))
(export norm (native lengine.Prelude.NORM fn))

(export println           (native lengine.Prelude.PRINTLN fn))
(export print             (native lengine.Prelude.PRINT fn))
(export printf            (native lengine.Prelude.PRINTF fn))
(export format            (native lengine.Prelude.FORMAT fn))
(export assert            (native lengine.Prelude.ASSERT fn))
(export assert-true       (native lengine.Prelude.ASSERT_TRUE fn))
(export assert-false      (native lengine.Prelude.ASSERT_FALSE fn))
(export assert-equals     (native lengine.Prelude.ASSERT_EQUALS fn))
(export assert-not-equals (native lengine.Prelude.ASSERT_NOT_EQUALS fn))

;;; Types
(export bool    (native lengine.Prelude.CAST_BOOLEAN fn))
(export bool?   (native lengine.Prelude.IS_BOOL fn))
(export int     (native lengine.Prelude.CAST_INT fn))
(export int?    (native lengine.Prelude.IS_INT fn))
(export double  (native lengine.Prelude.CAST_DOUBLE fn))
(export double? (native lengine.Prelude.IS_DOUBLE fn))
(export nan     (native lengine.Prelude.DOUBLE_NAN var))
(export nan?    (native lengine.Prelude.IS_NAN fn))
(export char    (native lengine.Prelude.CAST_CHARACTER fn))
(export char?   (native lengine.Prelude.IS_CHAR fn))
(export string  (native lengine.Prelude.CAST_STR fn))
(export string? (native lengine.Prelude.IS_STR fn))

(export now     (native lengine.Prelude.NOW fn))
(export exit    (native lengine.Prelude.EXIT fn))

(export async   (native lengine.Prelude.ASYNC fn))
(export await   (native lengine.Prelude.AWAIT fn))
(export chan    (native lengine.Prelude.CHANNEL fn))
(export send    (native lengine.Prelude.SEND fn))
(export receive (native lengine.Prelude.RECEIVE fn))
(export close   (native lengine.Prelude.CLOSE fn))

(export listen  (native lengine.Prelude.LISTEN fn))
(export help    (native lengine.Prelude.HELP fn))
(export db-conn (native lengine.Prelude.DB_CONN fn))

(println (string true))
(println (string? true))
(println (string? "Hello"))
(println (/= 10 20))
