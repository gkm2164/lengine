(module ProcessMembrane)

(import gben.libs.module.split)
(import gben.libs.module.map)
(import gben.libs.module.filter)
(import gben.libs.module.reverse)
(import gben.libs.module.file-ch-stream)
(import gben.libs.module.read-through)

(def all-data (read-through (file-ch-stream "./102521_membrane_GC_cell_lines.csv")))

(def splitted (split all-data #\Linefeed))

(println splitted)

(def first-values (loop for x in splitted
                         (let ((line (split x #\,)))
                              (head line))))

(println first-values)

(def numbers (map double (filter (drop 1 first-values)
                                 ^((x) (and (/= x "NaN") (/= x "EOF"))))))

(def sum (fold numbers 0.0 +))
(def avg (/ sum (len numbers)))

(println sum)
(println avg)
