(module gben.tests.Boolean)

(def T true)
(def F false)
(def bool-list [T F])

(assert-true "T should be true" T)
(assert-false "F should be false" F)
(assert-equals "should eq to" [T F] bool-list)

(def lt (< 3 5))
(def gt (> 3 5))
(def a (and T T))
(def o (or T T))
(def e (= T T))
(def ne (/= T F))

(assert "LT should be True" lt)
(assert "GT should be false" (not gt))
(assert "a should be True" a)
(assert "o should be True" o)
(assert "e should be True" e)
(assert "ne should be True" ne)

(def n1 3)
(def n2 5)

(if (< n1 n2)
  (assert "n2 is bigger than n1" true)
  (assert "n1 is bigger than n2" false))

(if (> n1 n2)
  (println "n1 is bigger than n2")
  (println "n2 is bigger than n1"))

(println "Define range 1")
(def r1 (range 1 6))
(println "Define range 2")
(def r2 (range 2 7))

(println "Below 2 shows identical result, with different collection types")
(println
    (loop for x in [1 2 3 4 5]
          for y in [2 3 4 5 6]
          (+ x y)))

(println
    (loop for x in r1
          for y in r2
          (+ x y)))
